import { useLocalSearchParams } from 'expo-router';
import React, { useState } from 'react';
import { View, TextInput, Button, StyleSheet, Image, TouchableOpacity, Text, TouchableWithoutFeedback, Keyboard } from 'react-native';

const OptionScreen = () => {
    const [animal, setAnimal] = useState('');
    const params = useLocalSearchParams();
    const { meta } = params;
    console.log('Meta:', meta);

    const handleInputChange = (text) => {
        setAnimal(text);
    };

    const upload = async () => {
        console.log("Uploaded photo!");
        try {
        const response = await fetch("http://10.144.50.10:3000/upload-data", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            image: photo.base64,
            class: animal, // To be generated by the model
            longitude: 0,
            latitude: 0,
          }),
          });
          const data = await response.json();
          console.log(data);
        } catch (error) {
          console.error("Error uploading data to MongoDB:", error);
        }
    
    
      };

    return (
        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
            <View style={styles.mainContainer}>
                <TextInput
                    style={styles.input}
                    placeholder="Enter animal name"
                    onChangeText={handleInputChange}
                />
                <TouchableOpacity style={styles.button} onPress={upload}>
                    <Text>Submit</Text>
                </TouchableOpacity>
            </View>
        </TouchableWithoutFeedback>
    );
};

const styles = StyleSheet.create({
    mainContainer: {
        position: 'relative',
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    },
    input: {
        width: 300,
        height: 40,
        borderColor: 'gray',
        borderWidth: 1,
        marginBottom: 20,
        padding: 10,
    },

    button: {
        width: 300,
        height: 40,
        backgroundColor: '#05DE5D',
        justifyContent: 'center',
        alignItems: 'center',
        borderRadius: 30,
    },
});

export default OptionScreen;